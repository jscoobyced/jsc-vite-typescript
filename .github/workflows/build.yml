name: Build

on:
  push:
    branches:
      - "main"
  release:
    types: [published]

env:
  IMAGE_NAME: jsc-mu-game
  IMAGE_TITLE: Mumu's Adventures
  IMAGE_DESCRIPTION: This is the image for Mumu's Adventures game.
  SRC_PATH: code/
  DOCKERFILE_PATH: etc/docker/Dockerfile

jobs:
  install:
    name: Build source code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Dependencies
        run: yarn --cwd ${{ env.SRC_PATH }} install

      - name: Create tarball
        run: tar -czf ${{ env.IMAGE_NAME }}.tar.gz -C ${{ env.SRC_PATH }} node_modules

      - name: Upload common artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}
          retention-days: 1
          path: ${{ env.IMAGE_NAME }}.tar.gz

  lint:
    name: Run ESlint on source code
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}

      - name: Untar common Dependencies
        run: tar -xzf ${{ env.IMAGE_NAME }}.tar.gz -C ./${{ env.SRC_PATH }}

      - name: Run ESLint
        run: |
          yarn --cwd ${{ env.SRC_PATH }} lint

  build-image:
    name: Build image and push to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - lint
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_TITLE }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
